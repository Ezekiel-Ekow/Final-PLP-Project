{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H\\\\Desktop\\\\PLP Project\\\\src\\\\components\\\\CalculatorForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorForm = ({\n  onCalculate\n}) => {\n  _s();\n  const [medication, setMedication] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [medications, setMedications] = useState([]);\n  const [error, setError] = useState(\"\"); // To handle and display errors\n\n  useEffect(() => {\n    const fetchMedications = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/medications\");\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || \"Failed to fetch medications\");\n        }\n        const data = await response.json();\n        setMedications(data);\n        setError(\"\"); // Clear any existing errors\n      } catch (error) {\n        console.error(\"Error fetching medications:\", error);\n        setError(error.message);\n      }\n    };\n    fetchMedications();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (medication && weight > 0) {\n      onCalculate(medication, weight);\n    } else {\n      alert(\"Please select a medication and enter a valid weight!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"medication\",\n        children: \"Medication:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"medication\",\n        value: medication,\n        onChange: e => setMedication(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Medication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), medications.map(med => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: med,\n          children: med\n        }, med, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"weight\",\n        children: \"Weight (kg):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"weight\",\n        value: weight,\n        onChange: e => setWeight(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !medications.length,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CalculatorForm, \"mHL5I6trHf95OwOqFpkdNFqsBjw=\");\n_c = CalculatorForm;\nexport default CalculatorForm;\nvar _c;\n$RefreshReg$(_c, \"CalculatorForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CalculatorForm","onCalculate","_s","medication","setMedication","weight","setWeight","medications","setMedications","error","setError","fetchMedications","response","fetch","ok","errorData","json","Error","data","console","message","handleSubmit","e","preventDefault","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","style","color","id","value","onChange","target","required","map","med","type","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/H/Desktop/PLP Project/src/components/CalculatorForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CalculatorForm = ({ onCalculate }) => {\r\n  const [medication, setMedication] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [medications, setMedications] = useState([]);\r\n  const [error, setError] = useState(\"\"); // To handle and display errors\r\n\r\n  useEffect(() => {\r\n    const fetchMedications = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/medications\");\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || \"Failed to fetch medications\");\r\n        }\r\n        const data = await response.json();\r\n        setMedications(data);\r\n        setError(\"\"); // Clear any existing errors\r\n      } catch (error) {\r\n        console.error(\"Error fetching medications:\", error);\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchMedications();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (medication && weight > 0) {\r\n      onCalculate(medication, weight);\r\n    } else {\r\n      alert(\"Please select a medication and enter a valid weight!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"medication\">Medication:</label>\r\n        {error ? (\r\n          <p style={{ color: \"red\" }}>{error}</p>\r\n        ) : (\r\n          <select\r\n            id=\"medication\"\r\n            value={medication}\r\n            onChange={(e) => setMedication(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"\">Select Medication</option>\r\n            {medications.map((med) => (\r\n              <option key={med} value={med}>\r\n                {med}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"weight\">Weight (kg):</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"weight\"\r\n          value={weight}\r\n          onChange={(e) => setWeight(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" disabled={!medications.length}>\r\n        Calculate\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CalculatorForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}