{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H\\\\Desktop\\\\PLP Project\\\\src\\\\components\\\\CalculatorForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalculatorForm = ({\n  onCalculate\n}) => {\n  _s();\n  const [medication, setMedication] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [medications, setMedications] = useState([]);\n\n  // Fetch medication names on component mount\n  useEffect(() => {\n    const fetchMedications = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/medications\");\n        const data = await response.json();\n        setMedications(data);\n      } catch (error) {\n        console.error(\"Error fetching medications:\", error);\n      }\n    };\n    fetchMedications();\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (medication && weight > 0) {\n      onCalculate(medication, weight);\n    } else {\n      alert(\"Please select a medication and enter a valid weight!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"medication\",\n        children: \"Medication:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"medication\",\n        value: medication,\n        onChange: e => setMedication(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Medication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), medications.map(med => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: med,\n          children: med\n        }, med, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"weight\",\n        children: \"Weight (kg):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"weight\",\n        value: weight,\n        onChange: e => setWeight(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CalculatorForm, \"yg1BS7rDLwwG7PyMh4FoM/UPABk=\");\n_c = CalculatorForm;\nexport default CalculatorForm;\nvar _c;\n$RefreshReg$(_c, \"CalculatorForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CalculatorForm","onCalculate","_s","medication","setMedication","weight","setWeight","medications","setMedications","fetchMedications","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","required","map","med","type","_c","$RefreshReg$"],"sources":["C:/Users/H/Desktop/PLP Project/src/components/CalculatorForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CalculatorForm = ({ onCalculate }) => {\r\n  const [medication, setMedication] = useState(\"\");\r\n  const [weight, setWeight] = useState(\"\");\r\n  const [medications, setMedications] = useState([]);\r\n\r\n  // Fetch medication names on component mount\r\n  useEffect(() => {\r\n    const fetchMedications = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/medications\");\r\n        const data = await response.json();\r\n        setMedications(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching medications:\", error);\r\n      }\r\n    };\r\n\r\n    fetchMedications();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (medication && weight > 0) {\r\n      onCalculate(medication, weight);\r\n    } else {\r\n      alert(\"Please select a medication and enter a valid weight!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"medication\">Medication:</label>\r\n        <select\r\n          id=\"medication\"\r\n          value={medication}\r\n          onChange={(e) => setMedication(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Select Medication</option>\r\n          {medications.map((med) => (\r\n            <option key={med} value={med}>\r\n              {med}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"weight\">Weight (kg):</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"weight\"\r\n          value={weight}\r\n          onChange={(e) => setWeight(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Calculate</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CalculatorForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}